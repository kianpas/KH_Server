package member.model.dao;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

import javax.swing.text.html.HTMLDocument.HTMLReader.PreAction;

import common.JDBCTemplate;

import static common.JDBCTemplate.*;
import member.model.vo.Member;

public class MemberDao {

	private Properties prop = new Properties();

	public MemberDao() {
		String fileName = MemberDao.class.getResource("/sql/member/member-query.properties").getPath();
		
		try {
			prop.load(new FileReader(fileName));
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	public Member selectOne(Connection conn, String str) {

		PreparedStatement pstmt = null;
		ResultSet rset = null;
		String sql = prop.getProperty("selectOne");
		
		Member m = null;

		try {
			pstmt = conn.prepareStatement(sql);

			pstmt.setString(1, str);

			rset = pstmt.executeQuery();

			while (rset.next()) {
				String memberId = rset.getString("member_id");
				String password = rset.getString("password");
				String memberName = rset.getString("member_name");
				String memberRole = rset.getString("member_role");
				String gender = rset.getString("gender");
				Date birthday = rset.getDate("birthday");
				String email = rset.getString("email");
				String phone = rset.getString("phone");
				String address = rset.getString("address");
				String hobby = rset.getString("hobby");
				Date enrollDate = rset.getDate("enroll_Date");

				m = new Member(memberId, password, memberName, memberRole, gender, birthday, email, phone, address,
						hobby, enrollDate);

			}
		} catch (SQLException e) {

			e.printStackTrace();

		} finally {
			close(rset);
			close(pstmt);

		}

		return m;
	}

	public int signUp(Connection conn, Member member) {
		
		PreparedStatement pstmt = null;
		String sql = prop.getProperty("signUp");
		int result = 0;
		
		try {
			
			pstmt = conn.prepareStatement(sql);
			
			pstmt.setString(1, member.getMemberId());
			pstmt.setString(3, member.getPassword());
			pstmt.setString(2, member.getMemberName());
			pstmt.setString(4, member.getMemberRole());
			pstmt.setString(5, member.getMemberId());
			pstmt.setString(6, member.getMemberId());
			pstmt.setString(7, member.getMemberId());
			pstmt.setString(8, member.getMemberId());
			pstmt.setString(9, member.getMemberId());
			pstmt.setString(10, member.getMemberId());
			pstmt.setString(11, member.getMemberId());
			
			
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			close(pstmt);
		}
		
		return result;
	}
}
